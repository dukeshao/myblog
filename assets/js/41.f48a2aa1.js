(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{490:function(s,t,a){"use strict";a.r(t);var n=a(4),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"一、docker-save保存运行中的镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、docker-save保存运行中的镜像"}},[s._v("#")]),s._v(" 一、docker save保存运行中的镜像")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#docker save "镜像地址名称":"版本">"保存为的路径和文件名"')]),s._v("\ndocker save registry.paas/cmss/default-http-backend:v3."),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("0")]),s._v(">")]),s._v("/opt/test.tar.gz\n")])])]),a("h2",{attrs:{id:"centos-docker安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#centos-docker安装"}},[s._v("#")]),s._v(" Centos docker安装")]),s._v(" "),a("p",[s._v("一、自动安装")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用官方安装脚本自动安装")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" -fsSL https://get.docker.rom "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v(" -s docker --mirror Aliyun\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 也可以使用国内 daocloud 一键安装命令")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" -sSL https://get.daocloud.io/docker "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v("\n")])])]),a("p",[s._v("二、手动安装")]),s._v(" "),a("p",[s._v("卸载旧版本")]),s._v(" "),a("p",[s._v("较旧的 Docker 版本称为 docker 或 docker-engine ，如果已安装这些程序，请卸载及相关依赖")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" yum remove docker "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v(" \n\t\t\t\tdocker-client "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                docker-client-latest "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                docker-common "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                docker-latest "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                docker-latest-logrotate "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                docker-logrotate "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                docker-engine\n")])])]),a("p",[s._v("安装 docker engine-community")]),s._v(" "),a("p",[s._v("使用 docker 仓库进行安装")]),s._v(" "),a("p",[s._v("在新主机上首次安装 docker engine-community 之前，需要设置 docker 仓库。之后可以从仓库安装和更新 docker")]),s._v(" "),a("h4",{attrs:{id:"设置仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设置仓库"}},[s._v("#")]),s._v(" 设置仓库")]),s._v(" "),a("p",[s._v("安装所需的软件包：yum-utils 提供了 yum-config-manager，并且 device mapper 存储驱动程序需要 device-mapper-persistent-data 和 lvm2")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" yum "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -y yum-utils "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\ndevice-mapper-persistent-data "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  lvm2\n")])])]),a("p",[s._v("使用以下命令来设置稳定的仓库")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" yum-config-manager "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    --add-repo "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\n")])])]),a("p",[s._v("安装 docker engine-community")]),s._v(" "),a("p",[s._v("安装最新版本的 docker engine-community 和 containerd")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" yum "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" docker-ce docker-ce-cli containerd.io\n")])])]),a("p",[s._v("如果要安装特定版本，列出并排序可用的版本")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("yum list docker-ce --showduplicates "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sort")]),s._v(" -r\n")])])]),a("p",[s._v("通过其完整的软件包名称安装特定版本，该软件包名称是软件包名称（docker-ce）加上版本字符串（第二列），从第一个冒号（:）一直到第一个连字符，并用连字符（-）分隔。例如：docker-ce-18.09.1。")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" yum "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" docker-ce-"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("VERSION_STRING"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" docker-ce-cli-"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("VERSION_STRING"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" containerd.io\n")])])]),a("p",[s._v("启动 docker")]),s._v(" "),a("div",{staticClass:"language-bahs extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("sudo systemctl start docker\n")])])]),a("p",[s._v("通过运行 hello-world 映像来验证是否正确安装了 docker engine-community")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" docker run hello-world\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看镜像列表")]),s._v("\ndocker images\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除刚才测试用拉取的镜像 hello-world:latest")]),s._v("\ndocker rmi hello-world:latest\n")])])]),a("h2",{attrs:{id:"部署一个-node-服务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#部署一个-node-服务"}},[s._v("#")]),s._v(" 部署一个 node 服务")]),s._v(" "),a("p",[s._v("环境：基于已安装 docker 的服务器")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 首先拉取一个 node:latest 镜像")]),s._v("\ndocker pull node:latest\n")])])]),a("p",[s._v("将已写好的 node 应用文件传至服务器，路径随意(/app/chatroom),我的应用根目录叫 chatroom，是一个聊天室web应用")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("--chatroom\n\t--server.js\n\t--index.html\n\t--Dockerfile\n")])])]),a("p",[s._v("在应用根目录下创建 Dockerfile，并编写")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 拉取镜像")]),s._v("\nFROM node:latest\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在容器中创建目录")]),s._v("\nRUN "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -p /myapp/chatroom\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 应用在容器中的工作目录")]),s._v("\nWORKDIR /myapp/chatroom\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将 Dockerfile 所在目录的所有文件拷贝到 容器的指定目录")]),s._v("\nCOPY "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" /myapp/chatroom\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在容器工作目录中执行命令 npm i 安装依赖")]),s._v("\nRUN "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" i\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 当前应用从容器暴露的端口为 3000")]),s._v("\nEXPOSE "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3000")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启动应用命令 (或者 node back/server.js)")]),s._v("\nCMD "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" back "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" node server \n")])])]),a("p",[s._v("构建镜像")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker build -t <镜像取名> .")]),s._v("\ndocker build -t chatroom "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n")])])]),a("p",[s._v("查看镜像列表")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("docker images\n")])])]),a("p",[s._v("运行镜像")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker run -d -p 3000:3000 <镜像名>")]),s._v("\ndocker run -d -p "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3000")]),s._v(":3000 chatroom\n")])])]),a("blockquote",[a("p",[s._v("-d:表明容器会在后台运行")]),s._v(" "),a("p",[s._v("-p:表示端口映射，把本机的3000端口映射到容器的3000端口，这样外网就能通过本机的3000端口访问我们的应用了")])]),s._v(" "),a("h2",{attrs:{id:"镜像的操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#镜像的操作"}},[s._v("#")]),s._v(" 镜像的操作")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("\n")])])]),a("h2",{attrs:{id:"容器的操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#容器的操作"}},[s._v("#")]),s._v(" 容器的操作")]),s._v(" "),a("p",[s._v("查看容器")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看所有的容器")]),s._v("\ndocker "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" -a\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 只查看运行中的容器")]),s._v("\ndocker "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看容器的日志")]),s._v("\ndocker logs -f -t --tail "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("容器id或者别名"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])]),a("p",[s._v("进入容器")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker exec -it <容器ID> /bin/bash")]),s._v("\ndocker "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" -it 9e8c6e4dea1b /bin/bash\n")])])]),a("p",[s._v("离开容器")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("exit\n\n4h6zmnz7a37rz62qdtts\n")])])]),a("h2",{attrs:{id:"常用命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用命令"}},[s._v("#")]),s._v(" 常用命令")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# 1. docker images [options "o">] [name] 列出所有镜像')]),s._v("\n\n-a 列出所有镜像（含过程镜像）；\n-f 过滤镜像，如： -f "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'dangling=true'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" 只列出满足\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("dangling")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true 条件的镜像；\n--no-trunc 可显示完整的镜像ID；\n-q 仅列出镜像ID。\n--tree 以树状结构列出镜像的所有提交历史。\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 2. docker ps 列出所有运行中容器。")]),s._v("\n-a 列出所有容器（含沉睡镜像）；\n--before"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"nginx"')]),s._v(" 列出在某一容器之前创建的容器，接受容器名称和ID作为参数；\n--since"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"nginx"')]),s._v(" 列出在某一容器之后创建的容器，接受容器名称和ID作为参数；\n-f "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("exited"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("int"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" 列出满足\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("exited")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("int"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" 条件的容器；\n-l 仅列出最新创建的一个容器；\n--no-trunc 显示完整的容器ID；\n-n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" 列出最近创建的4个容器；\n-q 仅列出容器ID；\n-s 显示容器大小。\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 3. docker rmi")]),s._v("\ndocker rmi "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("options "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"o"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("image"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"o"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("image"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\ndocker rmi nginx:latest postgres:latest python:latest\n\n从本地移除一个或多个指定的镜像。\n-f 强行移除该镜像，即使其正被使用；\n--no-prune 不移除该镜像的过程镜像，默认移除。\n\n要删除全部image的话\ndocker rmi "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),s._v("docker images -q"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 4. docker rm")]),s._v("\ndocker "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("options "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"o"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("container"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"o"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("container"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\ndocker "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" nginx-01 nginx-02 db-01 db-02\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" docker "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" -l /webapp/redis\n\n-f 强行移除该容器，即使其正在运行；\n-l 移除容器间的网络连接，而非容器本身；\n-v 移除与容器关联的空间。\n\ndocker "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),s._v("docker "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" -aq"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v(" ：删除所有容器\ndocker stop "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("NAME"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("/"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("CONTAINER ID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(":将容器退出。\ndocker "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("kill")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("NAME"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("/"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("CONTAINER ID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(":强制停止一个容器。\n\n")])])]),a("h2",{attrs:{id:"常用命令2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用命令2"}},[s._v("#")]),s._v(" 常用命令2")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(".docker version   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#查看docker的版本")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(".docker info   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#查看docker的详细信息")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(".docker images   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#查看本地所有镜像")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(".docker images nginx   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#查看本地与nginx的相关的镜像")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(".docker "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" -a   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#查看当前所有容器的状态（包括没有运行的）")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v(".docker "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#查看当前正在运行的容器的状态")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v(".docker stop vm1   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#停止容器vm1(容器vm1存在,并运行)")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v(".docker start vm1   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#启动容器vm1(容器vm1存在,但没有运行)")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),s._v(".docker "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("kill")]),s._v(" vm1   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#强制干掉容器vm1(容器vm1存在,并运行)")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(".docker attach vm1   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#连接容器vm1(当容器vm1正在运行,要再次连接时,使用该命令)")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),s._v(".docker "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("diff")]),s._v(" vm1   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#查看容器vm1的修改(A – Add;D – Delete;C – Change)")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(".docker "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("top")]),s._v(" vm1   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#查看容器vm1的进程")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),s._v(".docker stats vm1   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#查看容器vm1的资源使用率")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("14")]),s._v(".docker pause/unpause vm1   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#暂停/恢复容器vm1(但是docker ps中显示仍在运行状态)")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("15")]),s._v(".docker "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" index.html vm1:/usr/share/nginx/html   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#同docker container cp index.html vm1:/usr/share/nginx/html。拷贝index.html文件到nginx创建的容器vm1的默认发布目录(/usr/share/nginx/html)下。在"Linux下docker应用初体验之nginx，ubuntu，rhel7镜像的使用"文章中使用过。')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("16")]),s._v(".docker logs vm1   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#查看容器vm1的日志(即在容器vm1中的所有操作)")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("17")]),s._v(".docker port vm1   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#查看容器vm1的端口映射情况(容器vm1正在运行)")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("18")]),s._v(".docker network "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#列出当前有哪些网络类型")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("19")]),s._v(".docker volume "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#列出当前有哪些数据卷")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v(".docker build -t rhel7:apache "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#使用当前目录下Dockerfile文件创建镜像rhel7:apache")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("21")]),s._v(".docker tag rhel7:nginx4 localhost:5000/rhel7:nginx4   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#相当于将rhel7:nginx4镜像复制一份出来,名字为localhost:5000/rhel7:nginx4")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("22")]),s._v(".docker login xin.org   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#登录xin.org")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("23")]),s._v(".docker "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("logout")]),s._v(" xin.org  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#退出xin.org")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("23")]),s._v(".docker run -d --name vm1 ubuntu   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#使用镜像ubuntu创建容器vm1,并运行。(-d表示后台运行容器,并返回容器ID)")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("24")]),s._v(".docker run -it --name vm1 ubuntu   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#使用镜像ubuntu创建容器vm1,并运行,并进入交互界面。")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("25")]),s._v(".docker run -it --name vm1 rhel7 "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#使用镜像rhel7创建容器vm1,并与其进行bash交互;(-i:以交互模式运行容器,通常与-t一起使用;-t:为容器重新分配一个伪输入终端)")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("26")]),s._v(".docker run -d --name vm1 -v /tmp/docker:/usr/share/nginx/html nginx   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#使用镜像nginx创建容器vm1,并运行,并将本地主机的/tmp/docker目录挂载到容器vm1内的/usr/share/nginx/html目录下。(即本地主机/tmp/docker目录下有什么内容,那容器vm1的/usr/share/nginx/html目录中就有什么内容)。在"Linux下docker应用初体验之nginx，ubuntu，rhel7镜像的使用"文章中使用过。')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("27")]),s._v(".docker "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" -it vm1 /bin/bash   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#进入容器vm1的bash界面(此时容器vm1正在运行)")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("28")]),s._v(".docker run --rm busybox:v1   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#用busybox:v1镜像创建容器,并运行,运行完成之后,立即删除")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("29")]),s._v(".docker run -it --rm ubuntu   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#用ubuntu镜像创建容器,并运行,运行完成之后,立即删除")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("30")]),s._v(".docker commit vm1 ubuntu:v1   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#将容器vm1打包生成ubuntu:v1镜像")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("31")]),s._v(".docker inspect vm1   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#查看容器vm1的详情")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("32")]),s._v(".docker inspect nginx   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#查看镜像vm1的详情")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("33")]),s._v(".docker rmi nginx   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#删除nginx镜像")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("34")]),s._v(".docker "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" vm1   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#删除容器vm1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#当容器正在运行时,使用该命令回报错。应该先docker stop vm1停止vm1容器,再docker rm vm1删除容器vm1。当然,也可以使用docker rm -f vm1强制删除正在运行的容器vm1。")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#即docker rm -f vm1相当于docker stop vm1 + docker rm vm1。")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("35")]),s._v(".docker "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("history")]),s._v(" nginx   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#查看nginx镜像的历史")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("36")]),s._v(".docker load -i ubuntu.tar   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#导入ubuntu.tar,以添加镜像ubuntu")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("37")]),s._v(".docker "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("import")]),s._v(" vm1.tar image   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#导入容器vm1.tar为镜像image")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("38")]),s._v(".docker save ubuntu "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" ubuntu.tar   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#导出镜像ubuntu")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("39")]),s._v(".docker "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" vm1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" vm1.tar   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#导出容器vm1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("40")]),s._v(".docker search  镜像名的一部分   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#查找镜像（如:docker search nginx  #查找与nginx相关的镜像）")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("41")]),s._v(".docker pull 镜像名  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#拉取镜像")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("42")]),s._v(".docker push 镜像名  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#推送镜像")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("43")]),s._v(".docker container "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#同docker ps,查看正在运行的容器")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("44")]),s._v(".docker container prune    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#删除所有运行停止的容器")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("45")]),s._v(".docker "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" -f "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("docker "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" -aq"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#删除所有容器(运行的和没运行的)")]),s._v("\n")])])]),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("docker attach vm1 "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#进入已经创建好的容器")]),s._v("\ndocker "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("diff")]),s._v(" vm5 "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#使用docker diff命令查看容器vm5的修改信息")]),s._v("\ndocker container prune  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#清理停止状态的容器的可写层")]),s._v("\n")])])]),a("p",[s._v("安装软件bash-*可以解决docker命令补不全的问题")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("yum "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" bash-* -y \n")])])]),a("p",[s._v("退出bash的两种操作")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("Ctrl + d 退出并停止容器\nCtrl + p + q 退出并在后台运行容器；\n")])])])])}),[],!1,null,null,null);t.default=e.exports}}]);