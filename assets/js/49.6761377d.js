(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{517:function(t,s,e){"use strict";e.r(s);var a=e(4),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"一、安装-homebrew"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一、安装-homebrew"}},[t._v("#")]),t._v(" 一、安装 Homebrew")]),t._v(" "),e("p",[t._v("brew之于mac，类似于yum之于linux")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ /bin/bash -c "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v('"')]),t._v("\n")])])]),e("h2",{attrs:{id:"二、安装-expect"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二、安装-expect"}},[t._v("#")]),t._v(" 二、安装 expect")]),t._v(" "),e("h4",{attrs:{id:"expect-介绍："}},[e("a",{staticClass:"header-anchor",attrs:{href:"#expect-介绍："}},[t._v("#")]),t._v(" expect 介绍：")]),t._v(" "),e("p",[t._v("一种与终端交互的工具")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ brew "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("expect")]),t._v("\n")])])]),e("h2",{attrs:{id:"三、测试expect"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#三、测试expect"}},[t._v("#")]),t._v(" 三、测试expect")]),t._v(" "),e("p",[t._v("以下文件命名为 ssh-my-server.sh")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token shebang important"}},[t._v("#!/usr/bin/expect")]),t._v("\nspawn "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("ssh")]),t._v(" root@120.24.33.53\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("expect")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"*password"')]),t._v("\nsend "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mypassword'),e("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v('"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("expect")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"]#"')]),t._v("\nsend "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"cd /'),e("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v('"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("expect")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"]#"')]),t._v("\nsend "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mkdir testexpect'),e("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v('"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("expect")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"]#"')]),t._v("\nsend "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"exit'),e("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v('"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("expect")]),t._v(" eof\n")])])]),e("p",[t._v("在终端执行 expect ssh-my-server.sh")]),t._v(" "),e("p",[t._v("以上脚本的意思是 连接服务器然后创建一个文件夹，成功后断开服务器连接")]),t._v(" "),e("h2",{attrs:{id:"四、打包并部署项目"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#四、打包并部署项目"}},[t._v("#")]),t._v(" 四、打包并部署项目")]),t._v(" "),e("p",[t._v("结合 bash 与 expect 任务，")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token shebang important"}},[t._v("#!/bin/bash")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 进入项目根目录")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" ~/desktop/epic-frontend/\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 执行构建项目")]),t._v("\ngulp build-noserver\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 压缩打包后的文件")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("zip")]),t._v(" -r dist.zip dist\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 开始 expect 交互")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("expect")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('EOF\n# 开启一个线程任务(上传压缩后的项目到服务器)\nspawn scp dist.zip root@120.22.44.55:/install/app/\n# 如果匹配到*password\nexpect "*password"\n# 发送密码并回车('),e("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v(')执行\nsend "123456'),e("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v('"\n# 结束当前 spawn\nexpect eof\n\n# 开启一个新的 expect 交互任务\nspawn ssh root@10.253.156.130\n# 匹配到*password\nexpect "*password"\n# 发送密码\nsend "123456'),e("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v('"\n# 匹配到]#，说明上一条命令已经执行完成\nexpect "]#"\n# 进入某个目录\nsend "cd /install/app/'),e("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v('"\n# 匹配到]#，说明上一条命令已经执行完成\nexpect "]#"\n# 覆盖解压所有文件\nsend "unzip -o dist.zip'),e("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v('"\n# 匹配到]#，说明上一条命令已经执行完成\nexpect "]#"\n# 将当前目录下的文件信息打印在终端\nsend "ll'),e("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v('"\n# 匹配到]#，说明上一条命令已经执行完成\nexpect "]#"\n# 执行项目部署任务(构建镜像、推入仓库、启用镜像等操作)\nsend "python build.py'),e("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v('"\nexpect "]#"\n# 断开远程服务器连接\nsend "exit'),e("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v('"\n# expect 交互结束\nEOF')]),t._v("\n")])])]),e("h2",{attrs:{id:"expect知识"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#expect知识"}},[t._v("#")]),t._v(" expect知识")]),t._v(" "),e("p",[t._v("expect脚本一般以#!/usr/bin/expect -f开头，类似bash脚本。")]),t._v(" "),e("p",[t._v("expect脚本常常以.exp、.ex、.sh结束。")]),t._v(" "),e("h3",{attrs:{id:"expect主要命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#expect主要命令"}},[t._v("#")]),t._v(" expect主要命令")]),t._v(" "),e("ul",[e("li",[t._v("spawn 新建一个进程，这个进程的交互由expect控制")]),t._v(" "),e("li",[t._v("expect 等待接受进程返回的字符串，直到超时时间，根据规则决定下一步操作")]),t._v(" "),e("li",[t._v("send 发送字符串给expect控制的进程")]),t._v(" "),e("li",[t._v("set 设定变量为某个值")]),t._v(" "),e("li",[t._v("exp_continue 重新执行expect命令分支")]),t._v(" "),e("li",[t._v("[lindex $argv 0] 获取expect脚本的第1个参数")]),t._v(" "),e("li",[t._v("[lindex $argv 1] 获取expect脚本的第2个参数")]),t._v(" "),e("li",[t._v("set timeout -1 设置超时方式为永远等待")]),t._v(" "),e("li",[t._v("set timeout 30 设置超时时间为30秒")]),t._v(" "),e("li",[t._v("interact 将脚本的控制权交给用户，用户可继续输入命令")]),t._v(" "),e("li",[t._v("expect eof 等待spawn进程结束后退出信号eof")])]),t._v(" "),e("h3",{attrs:{id:"expect命令分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#expect命令分支"}},[t._v("#")]),t._v(" expect命令分支")]),t._v(" "),e("p",[t._v("expect命令采用了tcl的模式-动作语法，此语法有以下几种模式：")]),t._v(" "),e("h4",{attrs:{id:"单一分支语法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#单一分支语法"}},[t._v("#")]),t._v(" 单一分支语法")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" password "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("123456")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("expect")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"*assword:"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" send "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$password")]),e("span",{pre:!0,attrs:{class:"token entity",title:"\\r"}},[t._v("\\r")]),t._v('"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("当输出中匹配*assword:时，输出password变量的数值和回车。")]),t._v(" "),e("h4",{attrs:{id:"多分支模式语法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#多分支模式语法"}},[t._v("#")]),t._v(" 多分支模式语法")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" password "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("123456")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("expect")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"(yes/no)?"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" send "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"yes'),e("span",{pre:!0,attrs:{class:"token entity",title:"\\r"}},[t._v("\\r")]),t._v('"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" exp_continue "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"*assword:"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" send "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$password")]),e("span",{pre:!0,attrs:{class:"token entity",title:"\\r"}},[t._v("\\r")]),t._v('"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("当输出中包含(yes/no)?时，输出yes和回车,同时重新执行此多分支语句。")]),t._v(" "),e("p",[t._v("当输出中匹配*assword:时，输出password变量的数值和回车。")])])}),[],!1,null,null,null);s.default=n.exports}}]);