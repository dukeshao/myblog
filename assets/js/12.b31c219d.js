(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{497:function(t,a,s){"use strict";s.r(a);var r=s(4),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"一、js的发展历史"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、js的发展历史"}},[t._v("#")]),t._v(" 一、JS的发展历史")]),t._v(" "),s("p",[t._v("1\t2009年12月，ECMAScript5.0正式发布")]),t._v(" "),s("p",[t._v("2015年6月，ECMAScript6.0正式发布，并且更名为ECMAScript2015")]),t._v(" "),s("p",[t._v("2\tJS的编写位置，可以写在head里面，也可以写在body里面")]),t._v(" "),s("p",[t._v("src 链接到外部js，引入js的路径")]),t._v(" "),s("p",[t._v("若存在src属性在script标签里面写js代码无效")]),t._v(" "),s("p",[t._v('a[href="javascript:js代码;js代码"] 点击a标签执行js代码')]),t._v(" "),s("p",[t._v("3\tjs的注释")]),t._v(" "),s("p",[t._v("// 单行注释\t/**/ 多行注释，不能嵌套多行注释")]),t._v(" "),s("h3",{attrs:{id:"javascript的诞生"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#javascript的诞生"}},[t._v("#")]),t._v(" JavaScript的诞生")]),t._v(" "),s("p",[t._v("JavaScript 诞生于 1995 年。由Netscape(网景公司)的程序员Brendan Eich(布兰登)与Sun公司联手开发一门脚本语言, 最初名字叫做Mocha，1995年9月改为LiveScript。12月，Netscape公司与Sun公司（Java语言的发明者）达成协议，后者允许将这种语言叫做JavaScript。这样一来，Netscape公司可以借助Java语言的声势。\n1996年3月， Netscape公司的浏览器Navigator2.0浏览器正式内置了JavaScript脚本语言. 此后其他主流浏览器逐渐开始支持JavaScript.")]),t._v(" "),s("h3",{attrs:{id:"js版本"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js版本"}},[t._v("#")]),t._v(" js版本")]),t._v(" "),s("p",[t._v("JavaScript这种语言的基本语法结构是由ECMAScript来标准化的, 所以我们说的JavaScript版本一般指的是ECMAScript版本.")]),t._v(" "),s("p",[t._v("· 1997年7月，ECMAScript 1.0发布。")]),t._v(" "),s("p",[t._v("· 1998年6月，ECMAScript 2.0版发布。")]),t._v(" "),s("p",[t._v("· 1999年12月，ECMAScript 3.0版发布。")]),t._v(" "),s("p",[t._v("· 2007年10月，ECMAScript 4.0版草案想要提交ECMA组织, 但由于4.0版的目标过于激进, 改动太大, 并且微软,谷歌等大公司极力反对；一直到2008年7月ECMA开会决定，中止ECMAScript 4.0的开发（即废除了这个版本）")]),t._v(" "),s("p",[t._v("· 2009年12月，ECMAScript 5.0版正式发布")]),t._v(" "),s("p",[t._v("· 2011年6月，ECMAscript 5.1版发布")]),t._v(" "),s("p",[t._v("· 2015年6月，ECMAScript 6正式发布，并且更名为“ECMAScript 2015”。")]),t._v(" "),s("h3",{attrs:{id:"js语言的组成"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js语言的组成"}},[t._v("#")]),t._v(" js语言的组成")]),t._v(" "),s("p",[t._v("javascript = ECMAScript(核心) + BOM + DOM")]),t._v(" "),s("blockquote",[s("p",[t._v("· 核心(ECMAScript)")]),t._v(" "),s("p",[t._v("· 浏览器对象模型(BOM) browser")]),t._v(" "),s("p",[t._v("· 文档对象模型(DOM) document")])]),t._v(" "),s("p",[t._v("ECMA 欧洲电脑厂商联合会 制定ECMAScript规范。")]),t._v(" "),s("p",[t._v("W3c(万维网联盟)指定html及css规范")]),t._v(" "),s("h3",{attrs:{id:"js和h5的关系"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js和h5的关系"}},[t._v("#")]),t._v(" JS和H5的关系")]),t._v(" "),s("p",[t._v("h5全称html5,不是单纯的html的第5个版本，而是一项最新的web标准，是html、css、javascript等技术的集合")]),t._v(" "),s("h2",{attrs:{id:"二、声明变量及赋值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、声明变量及赋值"}},[t._v("#")]),t._v(" 二、声明变量及赋值")]),t._v(" "),s("h3",{attrs:{id:"声明变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#声明变量"}},[t._v("#")]),t._v(" 声明变量")]),t._v(" "),s("p",[t._v("​\t通过关键字var声明：var beizi;")]),t._v(" "),s("h3",{attrs:{id:"变量赋值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量赋值"}},[t._v("#")]),t._v(" 变量赋值")]),t._v(" "),s("p",[t._v("​\t通过=赋值：beizi = 'kele';")]),t._v(" "),s("h3",{attrs:{id:"声明变量及赋值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#声明变量及赋值"}},[t._v("#")]),t._v(" 声明变量及赋值")]),t._v(" "),s("p",[t._v("​\tvar beizi = 'kele';")]),t._v(" "),s("h3",{attrs:{id:"声明多个变量及赋值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#声明多个变量及赋值"}},[t._v("#")]),t._v(" 声明多个变量及赋值")]),t._v(" "),s("p",[t._v("​\tvar a,b,c;")]),t._v(" "),s("p",[t._v("​\ta = 10;")]),t._v(" "),s("p",[t._v("​\tb = 20;")]),t._v(" "),s("p",[t._v("​\tc = 30;")]),t._v(" "),s("p",[t._v("​\tvar a = 10,b = 20, c= 30;")]),t._v(" "),s("h3",{attrs:{id:"变量的命名规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量的命名规则"}},[t._v("#")]),t._v(" 变量的命名规则")]),t._v(" "),s("p",[t._v("​\t不能以数字开头，包含数字、字母、_、$；不能使用关键字、保留字；严格区分大小写。起名要见名知意，常用驼峰命名法")]),t._v(" "),s("h2",{attrs:{id:"三、数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三、数据类型"}},[t._v("#")]),t._v(" 三、数据类型")]),t._v(" "),s("h3",{attrs:{id:"基本数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本数据类型"}},[t._v("#")]),t._v(" 基本数据类型")]),t._v(" "),s("h4",{attrs:{id:"number-数字"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#number-数字"}},[t._v("#")]),t._v(" number 数字")]),t._v(" "),s("p",[t._v("​\t普通数字；NaN非数字，不等于任何值，自己都不等于自己；isNaN()")]),t._v(" "),s("h4",{attrs:{id:"string-字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#string-字符串"}},[t._v("#")]),t._v(" string 字符串")]),t._v(" "),s("p",[t._v("​\t只要两侧有引号就是字符串类型；若字符串内还存在相同的引号，将字符串两侧的引号换成另外一种，或使用\\转义字符")]),t._v(" "),s("h4",{attrs:{id:"boolean-布尔类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#boolean-布尔类型"}},[t._v("#")]),t._v(" boolean 布尔类型")]),t._v(" "),s("p",[t._v("​\t只有两个值：true 、false；")]),t._v(" "),s("h3",{attrs:{id:"特殊数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#特殊数据类型"}},[t._v("#")]),t._v(" 特殊数据类型")]),t._v(" "),s("h4",{attrs:{id:"null-空对象；"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#null-空对象；"}},[t._v("#")]),t._v(" null 空对象；")]),t._v(" "),s("p",[t._v("若元素还未加载出来，获取元素会得到空对象")]),t._v(" "),s("h4",{attrs:{id:"undefined"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#undefined"}},[t._v("#")]),t._v(" undefined")]),t._v(" "),s("p",[t._v("通过var声明变量后，没有对变量进行赋值，这个变量的值就为undefined")]),t._v(" "),s("h3",{attrs:{id:"引用数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#引用数据类型"}},[t._v("#")]),t._v(" 引用数据类型")]),t._v(" "),s("p",[t._v("Array,Object")]),t._v(" "),s("h2",{attrs:{id:"四、输出"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#四、输出"}},[t._v("#")]),t._v(" 四、输出")]),t._v(" "),s("h3",{attrs:{id:"alert"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#alert"}},[t._v("#")]),t._v(" alert()")]),t._v(" "),s("p",[t._v("​\talert(具体的值||变量)；")]),t._v(" "),s("h3",{attrs:{id:"document-write"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#document-write"}},[t._v("#")]),t._v(" document.write()")]),t._v(" "),s("p",[t._v("​\tdocument.write(具体的值||变量)，往body里面输出内容；支持标签；")]),t._v(" "),s("h3",{attrs:{id:"console-log"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#console-log"}},[t._v("#")]),t._v(" console.log()")]),t._v(" "),s("p",[t._v("​\tconsole.log()输出到控制台，常用于测试")]),t._v(" "),s("h3",{attrs:{id:"元素-innerhtnl"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#元素-innerhtnl"}},[t._v("#")]),t._v(' 元素.innerHTNL = "";')]),t._v(" "),s("h2",{attrs:{id:"五、运算"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#五、运算"}},[t._v("#")]),t._v(" 五、运算")]),t._v(" "),s("h3",{attrs:{id:"算数运算"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#算数运算"}},[t._v("#")]),t._v(" 算数运算 + - * / %")]),t._v(" "),s("p",[t._v('1\t获取元素document.getElementById("id名")')]),t._v(" "),s("p",[t._v("2\t获取文本框的值num1.value")]),t._v(" "),s("h3",{attrs:{id:"赋值运算"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#赋值运算"}},[t._v("#")]),t._v(" 赋值运算")]),t._v(" "),s("p",[t._v("​\t=、+=、-=、*=、/=、%=")]),t._v(" "),s("p",[t._v("= 将右边的值赋值给左边的变量")]),t._v(" "),s("p",[t._v("+=将右边的值追加到左边的变量")]),t._v(" "),s("p",[t._v("-=")]),t._v(" "),s("h3",{attrs:{id:"关系运算"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关系运算"}},[t._v("#")]),t._v(" 关系运算")]),t._v(" "),s("p",[t._v("(>,<,>=,<=,==,===,!=,!==)")]),t._v(" "),s("p",[t._v("关系运算得到的结果为布尔类型，且比较时会进行隐式转换")]),t._v(" "),s("p",[t._v("==判断左右两侧的值是否相等，不考虑数据类型")]),t._v(" "),s("p",[t._v("!=判断左右两侧的值是否不相等，不考虑数据类型")]),t._v(" "),s("p",[t._v("===判断左右两侧的值且数据类型是否相等，不会发生隐式转换")]),t._v(" "),s("p",[t._v("!==不全等于,只要值或数据类型不相等即为true")]),t._v(" "),s("h3",{attrs:{id:"逻辑运算"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#逻辑运算"}},[t._v("#")]),t._v(" 逻辑运算")]),t._v(" "),s("p",[t._v("&& 与运算；运算两边返回值都为true，才返回true;与运算左边返回值为false不再执行右边的代码；与运算左边返回值为true，最终的结果为右边代码返回的值")]),t._v(" "),s("p",[t._v("|| 或运算；运算两边返回值都为false才为false；或运算左边返回值为true，不再执行右边的代码；或运算左边返回值为false，最终的结果为右边代码返回的值；\n!非运算；")]),t._v(" "),s("p",[t._v("1.只有与运算：")]),t._v(" "),s("p",[t._v("当全部都是真值，那么取最后一个真值；若有假值，则取第一个假值，不再往后看；")]),t._v(" "),s("p",[t._v("2.只有或运算：")]),t._v(" "),s("p",[t._v("当全部是真的时候，那么使用第一个真值；若有假，从左开始第一个为真的值。")]),t._v(" "),s("p",[t._v("3.与或运算混合")]),t._v(" "),s("p",[t._v("先算与运算，再算或运算；")]),t._v(" "),s("h3",{attrs:{id:"一元运算"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一元运算"}},[t._v("#")]),t._v(" 一元运算")]),t._v(" "),s("p",[t._v("++ 对变量本身进行自增1；++a先自增再运算；a++先将自己本身的值返回出去，再自增1；")]),t._v(" "),s("p",[t._v("运算符的优先级")]),t._v(" "),s("p",[t._v("()；一元运算!、++、--；算数运算符*、/、+、-；关系运算符>、<、==；逻辑运算符&&、||；赋值运算符；")]),t._v(" "),s("h3",{attrs:{id:"进制转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#进制转换"}},[t._v("#")]),t._v(" 进制转换")]),t._v(" "),s("p",[t._v("二进制0 1")]),t._v(" "),s("p",[t._v("八进制0 1 2 3 4 5 6 7")]),t._v(" "),s("p",[t._v("十进制0 1 2 3 4 5 6 7 8 9")]),t._v(" "),s("p",[t._v("十六进制0 1 2 3 4 5 6 7 8 9 a b c d e f")]),t._v(" "),s("p",[t._v("方法：（1）十进制转多进制toString(n)；（2）多进制转十进制parseInt(str,n)；str代表多进制数 n代表进制")]),t._v(" "),s("h2",{attrs:{id:"六、数据类型的转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#六、数据类型的转换"}},[t._v("#")]),t._v(" 六、数据类型的转换")]),t._v(" "),s("h3",{attrs:{id:"隐式转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#隐式转换"}},[t._v("#")]),t._v(" 隐式转换")]),t._v(" "),s("p",[t._v("若运算无法进行下去时，会将数据类型进行转换，之后再尝试进行运算")]),t._v(" "),s("p",[t._v("若隐式转换后，算数运算还没进行下去，会得到一个值NaN（非数字）")]),t._v(" "),s("h3",{attrs:{id:"直接转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#直接转换"}},[t._v("#")]),t._v(" 直接转换")]),t._v(" "),s("p",[t._v("Number() 将其他数据类型的值转成数字类型")]),t._v(" "),s("p",[t._v("​\t字符串=>数字：要么就是具体的值，要么就是NaN；布尔=>true:1; false:0;")]),t._v(" "),s("p",[t._v("String() 将其他数据类型的值转成字符串类型")]),t._v(" "),s("p",[t._v("Boolean()将其他数据类型的值转成布尔类型")]),t._v(" "),s("p",[t._v('​\t除了0、NaN、""、null、undefined会转成false外，其他都是true')]),t._v(" "),s("p",[t._v("1\tNaN 非数字")]),t._v(" "),s("p",[t._v("程序的三大执行")]),t._v(" "),s("p",[t._v("顺序\n分支语句：if语句；switch语句；\n循环")]),t._v(" "),s("h2",{attrs:{id:"七、条件判断语句"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#七、条件判断语句"}},[t._v("#")]),t._v(" 七、条件判断语句")]),t._v(" "),s("h3",{attrs:{id:"if-语句"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#if-语句"}},[t._v("#")]),t._v(" if 语句")]),t._v(" "),s("h4",{attrs:{id:"单分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#单分支"}},[t._v("#")]),t._v(" 单分支")]),t._v(" "),s("p",[t._v("if(条件){满足条件执行这里的代码}")]),t._v(" "),s("h4",{attrs:{id:"双分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#双分支"}},[t._v("#")]),t._v(" 双分支")]),t._v(" "),s("p",[t._v("if(条件){满足条件执行这里的代码}else{不满足条件执行这里的代码}")]),t._v(" "),s("h4",{attrs:{id:"多分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多分支"}},[t._v("#")]),t._v(" 多分支")]),t._v(" "),s("p",[t._v("if(条件1){满足条件1执行这里的代码}else if(条件2){满足条件1执行这里的代码}else{不满足条件执行这里的代码}")]),t._v(" "),s("h4",{attrs:{id:"三元运算"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三元运算"}},[t._v("#")]),t._v(" 三元运算")]),t._v(" "),s("p",[t._v("格式：条件 ? 条件成立代码 : 条件不成立代码")]),t._v(" "),s("h3",{attrs:{id:"switch语句"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#switch语句"}},[t._v("#")]),t._v(" switch语句")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("变量"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" 值"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v("条件 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    当满足值"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("时，执行这里的代码"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" 值"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" 值"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    当满足值"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("或"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("时，执行这里的代码"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    所有值都不满足时，执行这里的代码"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n注意事项；\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v("判断值相等时是利用全等于，值及类型都必须一致\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 每个"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v("语句执行代码完毕后，记得"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),t._v("。\n")])])]),s("h2",{attrs:{id:"八、循环语句"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#八、循环语句"}},[t._v("#")]),t._v(" 八、循环语句")]),t._v(" "),s("p",[t._v("在给定条件成立时，反复执行某代码段，直到条件不成立为止；")]),t._v(" "),s("p",[t._v("循环语句的三大要素：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("\t\t\t\t\t\t条件\n初始化变量 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 变量更新\n")])])]),s("h3",{attrs:{id:"_1-while"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-while"}},[t._v("#")]),t._v(" 1.while")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//语法:当满足括号里的条件时，反复执行花括号里的代码")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("条件"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v(" something\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//示例")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//初始化变量")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//条件")]),t._v("\n  num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//执行操作")]),t._v("\n  i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//变量更新")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"_2-do-while"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-do-while"}},[t._v("#")]),t._v(" 2.do...while")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//语法:先执行一遍 do 后面花括号的代码，再判断 while 后面小括号的条件，满足条件则反复执行 do 后面花括号的代码")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v(" something\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("条件"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//示例")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  num"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"循环次数"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"_3-for"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-for"}},[t._v("#")]),t._v(" 3.for")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//语法:")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("条件"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v(" something\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//示例")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  num"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"_4-主动退出循环的语句"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-主动退出循环的语句"}},[t._v("#")]),t._v(" 4.主动退出循环的语句")]),t._v(" "),s("p",[t._v("语句中使用，在循环语句中代表退出循环")]),t._v(" "),s("h4",{attrs:{id:"_1-break"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-break"}},[t._v("#")]),t._v(" 1.break")]),t._v(" "),s("p",[t._v("退出当前整个循环，循环体中位于break后面的语句不再执行")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"_2-continue"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-continue"}},[t._v("#")]),t._v(" 2.continue")]),t._v(" "),s("p",[t._v("退出当前的本次循环，还会进入当前的下一次循环。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("continue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("break和continue后如果带标识，则跳出标识所在循环")]),t._v(" "),s("h3",{attrs:{id:"_5-死循环"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-死循环"}},[t._v("#")]),t._v(" 5.死循环")]),t._v(" "),s("p",[t._v("​\t\t反复执行某代码段，无法结束；")]),t._v(" "),s("h3",{attrs:{id:"_6-循环嵌套"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-循环嵌套"}},[t._v("#")]),t._v(" 6.循环嵌套")]),t._v(" "),s("p",[t._v("进入内层循环后，等待内层循环执行完一轮，外层循环的变量才会变更一次。")])])}),[],!1,null,null,null);a.default=e.exports}}]);