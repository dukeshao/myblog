(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{530:function(t,a,s){"use strict";s.r(a);var n=s(4),r=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"一、概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、概念"}},[t._v("#")]),t._v(" 一、概念")]),t._v(" "),s("p",[t._v("函数就是把特定功能的代码抽取出并进行封装，用来重复执行一些功能。")]),t._v(" "),s("h2",{attrs:{id:"二、优点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、优点"}},[t._v("#")]),t._v(" 二、优点")]),t._v(" "),s("p",[t._v("函数可以重复执行某一部分代码（通过函数名调用）；")]),t._v(" "),s("p",[t._v("使程序变得更简短而清晰；")]),t._v(" "),s("p",[t._v("有利于程序维护；")]),t._v(" "),s("h2",{attrs:{id:"三、创建方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三、创建方式"}},[t._v("#")]),t._v(" 三、创建方式")]),t._v(" "),s("h4",{attrs:{id:"a-关键字声明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#a-关键字声明"}},[t._v("#")]),t._v(" a.关键字声明")]),t._v(" "),s("p",[t._v("​\tfunction 函数名(形参){执行的功能代码}")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("特点：函数变量提升，可在函数声明前调用函数")]),t._v(" "),s("h4",{attrs:{id:"b-赋值式声明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#b-赋值式声明"}},[t._v("#")]),t._v(" b.赋值式声明")]),t._v(" "),s("p",[t._v("​\tvar 函数名=function(形参){执行的功能代码}")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//undefined")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("fn")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//ƒ (a,b){return a+b;}")]),t._v("\n")])])]),s("p",[t._v("特点：仅变量 fn 的声明提升，赋值为函数并未提升")]),t._v(" "),s("h4",{attrs:{id:"c-构造函数法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#c-构造函数法"}},[t._v("#")]),t._v(" c.构造函数法")]),t._v(" "),s("p",[t._v("​\t var 函数名=new Function();不推荐使用")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" fn "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"四、分类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#四、分类"}},[t._v("#")]),t._v(" 四、分类")]),t._v(" "),s("p",[t._v("1\t内置函数")]),t._v(" "),s("p",[t._v("2\t自定义函数")]),t._v(" "),s("p",[t._v("3\t匿名函数")]),t._v(" "),s("p",[t._v("function(形参){执行的功能代码}")]),t._v(" "),s("h2",{attrs:{id:"五、函数的执行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#五、函数的执行"}},[t._v("#")]),t._v(" 五、函数的执行")]),t._v(" "),s("p",[t._v("1\t主动执行：")]),t._v(" "),s("p",[t._v("​\t函数名()")]),t._v(" "),s("p",[t._v("2\t事件驱动：")]),t._v(" "),s("p",[t._v("​\tele.onclick=函数名;")]),t._v(" "),s("p",[t._v("​\tele.onclick=function(){}")]),t._v(" "),s("h2",{attrs:{id:"六、作用域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#六、作用域"}},[t._v("#")]),t._v(" 六、作用域")]),t._v(" "),s("p",[t._v("（一）分类")]),t._v(" "),s("h3",{attrs:{id:"_1全局作用域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1全局作用域"}},[t._v("#")]),t._v(" 1\t全局作用域")]),t._v(" "),s("p",[t._v("全局变量：在函数外定义的变量称为全局变量")]),t._v(" "),s("h3",{attrs:{id:"_2局部作用域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2局部作用域"}},[t._v("#")]),t._v(" 2\t局部作用域")]),t._v(" "),s("p",[t._v("局部变量：在函数内定义的变量")]),t._v(" "),s("h3",{attrs:{id:"_3变量的访问规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3变量的访问规则"}},[t._v("#")]),t._v(" 3\t变量的访问规则")]),t._v(" "),s("p",[t._v("​\t(1)\t若在某个函数内部使用一个变量，那么先查找该函数内是否有变量声明；")]),t._v(" "),s("p",[t._v("​\t(2)\t如果当前函数无变量a，则往父级函数查找，如果找到则使用，并停止查找；")]),t._v(" "),s("p",[t._v("​\t(3)\t如果在父级函数还是无法找到，则继续往上一层函数查找，以此类推；")]),t._v(" "),s("p",[t._v("​\t(4)\t直到最顶层(全局作用域)，如果还是没找到，则报错误** is not defined；")]),t._v(" "),s("p",[t._v("在函数内若没有通过var 声明变量，相当于在全局作用域用var 声明了该变量")]),t._v(" "),s("h3",{attrs:{id:"_4作用域链"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4作用域链"}},[t._v("#")]),t._v(" 4\t作用域链")]),t._v(" "),s("p",[t._v("​\t当函数访问变量时，根据就近原则从内到外查询变量，这个路径称为作用域链;")]),t._v(" "),s("h2",{attrs:{id:"七、函数的实参与形参"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#七、函数的实参与形参"}},[t._v("#")]),t._v(" 七、函数的实参与形参")]),t._v(" "),s("p",[t._v("1\t形参：函数定义时的参数（变量）")]),t._v(" "),s("p",[t._v("2\t实参：函数执行时的参数（值）")]),t._v(" "),s("p",[t._v("形参与实参个数可以不一致")]),t._v(" "),s("p",[t._v("函数内部隐藏的对象（是一个类数组），保存着实参的信息")]),t._v(" "),s("p",[t._v("一、声明提前")]),t._v(" "),s("p",[t._v("概念：代码从上往下顺序执行之前，会将所有的声明提升到当前作用域的最顶端，之后顺序执行")]),t._v(" "),s("p",[t._v("在变量赋值之前使用变量，变量的值为undefined")]),t._v(" "),s("p",[t._v("用赋值式声明函数，若在声明之前调用函数，会报错，** is not  a function；")]),t._v(" "),s("p",[t._v("用关键字声明函数，可以在声明之前调用函数")]),t._v(" "),s("h3",{attrs:{id:"基本数据类型与引用数据类型的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本数据类型与引用数据类型的区别"}},[t._v("#")]),t._v(" 基本数据类型与引用数据类型的区别")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("基本数据类型放在栈中,引用数据类型放在堆中\n")])])]),s("h3",{attrs:{id:"①-案例："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#①-案例："}},[t._v("#")]),t._v(" ①　案例：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("var a=10;\nvar b=a;\nb++;\nconsole.log(a,b);//10,11\n\nvar arr=[1,2,3];\nvar brr=arr;\nbrr[1]=20;\nconsole.log(arr===brr);//true\n")])])]),s("h3",{attrs:{id:"②-数据类型作为函数的参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#②-数据类型作为函数的参数"}},[t._v("#")]),t._v(" ②　数据类型作为函数的参数")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("//基本数据类型,传递的是值\nfunction numAdd(num){\n    num++;\n    console.log(num);//11\n}\n\nvar a=10;\nnumAdd(a);\nconsole.log(a);//10\n\n//引用数据类型,传递的是地址\nfunction numAdd(arr){\n    arr[0]=10;\n    console.log(arr);//[10,2]\n}\n\nvar arr1=[1,2];\nnumAdd(arr1);\nconsole.log(arr1);//10,2\n")])])]),s("h2",{attrs:{id:"八、函数的返回值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#八、函数的返回值"}},[t._v("#")]),t._v(" 八、函数的返回值")]),t._v(" "),s("p",[t._v("1\t概念：通过return将函数内部的值返回到函数外，函数外若要使用，必须接收。")]),t._v(" "),s("p",[t._v("2\t如果函数没有return，执行完后返回undefined")]),t._v(" "),s("p",[t._v("3\treturn 后面的代码不会被执行")]),t._v(" "),s("h2",{attrs:{id:"九、this"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#九、this"}},[t._v("#")]),t._v(" 九、this")]),t._v(" "),s("p",[t._v("1\t表示当前对象，取决于谁调用了这个函数")]),t._v(" "),s("p",[t._v("2\t直接执行，this 为window；事件驱动，this为绑定的元素。")]),t._v(" "),s("h2",{attrs:{id:"十、递归"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#十、递归"}},[t._v("#")]),t._v(" 十、递归")]),t._v(" "),s("p",[t._v("（自己调用自己）")]),t._v(" "),s("p",[t._v("1\t容易出现死循环")]),t._v(" "),s("p",[t._v("2\t递归避免死循环，设置好临界点return")]),t._v(" "),s("h2",{attrs:{id:"十一、回调函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#十一、回调函数"}},[t._v("#")]),t._v(" 十一、回调函数")]),t._v(" "),s("p",[t._v("（函数作为参数传递）")])])}),[],!1,null,null,null);a.default=r.exports}}]);